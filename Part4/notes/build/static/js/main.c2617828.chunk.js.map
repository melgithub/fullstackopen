{"version":3,"sources":["components/Note.js","services/notes.js","components/Notification.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","axios","get","then","response","data","newObject","post","id","put","Notification","message","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","toggleImportanceOf","find","n","changedNote","noteService","returnedNote","map","catch","error","setTimeout","filter","useEffect","initialNotes","console","log","length","notesToShow","key","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","concat","value","onChange","target","type","style","color","fontStyle","fontSize","ReactDOM","render","document","getElementById"],"mappings":"yOAgBeA,EAdF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACZC,EAAQF,EAAKG,UACjB,qBAAuB,iBAGzB,OACI,wBAAIC,UAAU,QACTJ,EAAKK,QACN,4BAAQC,QAASL,GAAmBC,K,gBCWjC,EAfA,WAEX,OADgBK,IAAMC,IAHV,cAIGC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAa9B,EAVA,SAAAC,GAEX,OADgBL,IAAMM,KARV,aAQwBD,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ9B,EALA,SAACG,EAAIF,GAEhB,OADgBL,IAAMQ,IAAN,UAbJ,aAaI,YAAwBD,GAAMF,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCJ5BK,EAZI,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OAAgB,OAAZA,EACK,KAIP,yBAAKb,UAAU,SACZa,I,8NCJT,IA8GiBC,EA9GL,WAAO,IAAD,EACYC,mBAAS,IADrB,mBACPC,EADO,KACAC,EADA,OAEgBF,mBAAS,IAFzB,mBAEPG,EAFO,KAEEC,EAFF,OAGgBJ,oBAAS,GAHzB,mBAGPK,EAHO,KAGEC,EAHF,OAI0BN,mBAAS,MAJnC,mBAIPO,EAJO,KAIOC,EAJP,KAMRC,EAAqB,SAAAd,GACzB,IAAMd,EAAOoB,EAAMS,MAAK,SAAAC,GAAC,OAAIA,EAAEhB,KAAOA,KAChCiB,E,yVAAW,IAAQ/B,EAAR,CAAcG,WAAYH,EAAKG,YAEhD6B,EACQlB,EAAIiB,GACXtB,MAAK,SAAAwB,GACJZ,EAASD,EAAMc,KAAI,SAAAlC,GAAI,OAAIA,EAAKc,KAAOA,EAAKd,EAAOiC,SAEpDE,OAAM,SAAAC,GACLT,EAAgB,SAAD,OACJ3B,EAAKK,QADD,sCAGfgC,YAAW,WACTV,EAAgB,QACf,KACHN,EAASD,EAAMkB,QAAO,SAAAR,GAAC,OAAIA,EAAEhB,KAAOA,UAIxCyB,qBAAU,WACRP,IAEGvB,MAAK,SAAA+B,GACJnB,EAASmB,QAEZ,IAEHC,QAAQC,IAAI,SAAUtB,EAAMuB,OAAQ,SAEpC,IAuBMC,EAAcpB,EAClBJ,EAAQA,EAAMkB,QAAO,SAAAtC,GAAI,OAAIA,EAAKG,aAuBpC,OACE,6BACE,qCAEA,kBAAC,EAAD,CAAcc,QAASS,IAEvB,6BACE,4BAAQpB,QAAS,kBAAMmB,GAAYD,KAAnC,QACQA,EAAU,YAAc,QAGlC,4BA1DeoB,EAAYV,KAAI,SAAAlC,GAAI,OACrC,kBAAC,EAAD,CACE6C,IAAK7C,EAAKc,GACVd,KAAMA,EACNC,iBAAkB,kBAAM2B,EAAmB5B,EAAKc,WAyDhD,0BAAMgC,SAnCM,SAACC,GACfA,EAAMC,iBACN,IAAMC,EAAa,CACjB5C,QAASiB,EACT4B,MAAM,IAAIC,MAAOC,cACjBjD,UAAWkD,KAAKC,SAAW,IAG7BtB,EACQiB,GACPxC,MAAK,SAAAwB,GACJZ,EAASD,EAAMmC,OAAOtB,IACtBV,EAAW,SAwBT,2BACAiC,MAAOlC,EACPmC,SAtBmB,SAACV,GACxBN,QAAQC,IAAIK,EAAMW,OAAOF,OACzBjC,EAAWwB,EAAMW,OAAOF,UAqBpB,4BAAQG,KAAK,UAAb,SAGJ,mBA5Da,WAOb,OACE,yBAAKC,MAPa,CAClBC,MAAO,QACPC,UAAW,SACXC,SAAU,KAKR,6BACA,0HAkDJ,Q,MCxGNC,IAASC,OACL,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.c2617828.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Note = ({ note, toggleImportance }) => {\r\n    const label = note.important\r\n    ? 'make not-important' : 'make important'\r\n\r\n\r\n    return (\r\n        <li className='note'>\r\n            {note.content}\r\n            <button onClick={toggleImportance}>{label}</button>\r\n        </li>\r\n    )\r\n}\r\n\r\n// This line exports the declared module, the variable Note, so it can be imported elsewhere.\r\nexport default Note","// Returns an object that has 3 functions.\r\n// The functions directly return the promises returned by the axios methods.\r\nimport axios from 'axios'\r\n\r\nconst baseUrl = '/api/notes'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n    }\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update }","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div className=\"error\">\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default Notification","import React, { useState, useEffect } from 'react'\r\nimport Note from './components/Note'\r\nimport noteService from './services/notes'\r\nimport Notification from './components/Notification'\r\n\r\nconst App = () => {\r\n    const [notes, setNotes] = useState([])\r\n    const [newNote, setNewNote] = useState('')\r\n    const [showAll, setShowAll] = useState(true)\r\n    const [errorMessage, setErrorMessage] = useState(null)\r\n\r\n    const toggleImportanceOf = id => {\r\n      const note = notes.find(n => n.id === id)\r\n      const changedNote = { ...note, important: !note.important }\r\n\r\n      noteService\r\n      .update(id, changedNote)\r\n      .then(returnedNote => {\r\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\r\n      })\r\n      .catch(error => {\r\n        setErrorMessage(\r\n          `Note '${note.content}' was already removed from server`\r\n        )\r\n        setTimeout(() => {\r\n          setErrorMessage(null)\r\n        }, 5000)\r\n        setNotes(notes.filter(n => n.id !== id))\r\n      })\r\n    }\r\n\r\n    useEffect(() => {\r\n      noteService\r\n        .getAll()\r\n        .then(initialNotes => {\r\n          setNotes(initialNotes)\r\n        })\r\n    }, [])\r\n\r\n    console.log('render', notes.length, 'notes')\r\n\r\n    const rows = () => notesToShow.map(note =>\r\n      <Note\r\n        key={note.id}\r\n        note={note}\r\n        toggleImportance={() => toggleImportanceOf(note.id)}\r\n      />\r\n    )\r\n    \r\n    const Footer = () => {\r\n      const footerStyle = {\r\n        color: 'green',\r\n        fontStyle: 'italic',\r\n        fontSize: 16\r\n      }\r\n    \r\n      return (\r\n        <div style={footerStyle}>\r\n          <br />\r\n          <em>Example Footer of Note app, Department of Computer Science, University of Helsinki 2019</em>\r\n        </div> \r\n      )\r\n    }\r\n\r\n    const notesToShow = showAll\r\n    ? notes : notes.filter(note => note.important)\r\n\r\n    const addNote = (event) => {\r\n      event.preventDefault()\r\n      const noteObject = {\r\n        content: newNote,\r\n        date: new Date().toISOString(),\r\n        important: Math.random() > 0.5\r\n      }\r\n\r\n      noteService\r\n      .create(noteObject)\r\n      .then(returnedNote => {\r\n        setNotes(notes.concat(returnedNote))\r\n        setNewNote('')\r\n      })\r\n    }\r\n\r\n    const handleNoteChange = (event) => {\r\n      console.log(event.target.value)\r\n      setNewNote(event.target.value)\r\n    }\r\n    \r\n    return (\r\n      <div>\r\n        <h1>Notes</h1>\r\n\r\n        <Notification message={errorMessage} />\r\n\r\n        <div>\r\n          <button onClick={() => setShowAll(!showAll)}>\r\n            show {showAll ? 'important' : 'all' }\r\n          </button>\r\n        </div>\r\n        <ul>\r\n          {rows()}\r\n        </ul>\r\n        <form onSubmit={addNote}>\r\n          <input \r\n          value={newNote} \r\n          onChange={handleNoteChange}/>\r\n          <button type=\"submit\">save</button>\r\n        </form>   \r\n        \r\n      <Footer />\r\n\r\n      </div>\r\n    )\r\n}\r\n  \r\n  export default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './index.css'\r\n\r\nReactDOM.render(\r\n    <App />, document.getElementById('root')\r\n)"],"sourceRoot":""}